{"ts":1376546201364,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"fs       = require('fs')\npath     = require('path')\nlazy     = require(\"lazy\")\nbackbone = require(\"backbone\")\n\ngames    = require('./games.js')\nparsers  = require('./parsers.js')\n\nfilename = 'testdata/cod4.log'\n\nconsole.log('Processing file \"'+filename+'\"');\n\nparser = new parsers.createParser(filename)\n\nconsole.log(\"Parser found - #{parser.name}, parsing...\");\n\nfile = fs.createReadStream filename, \n    flags: 'r'\n    encoding: null\n    fd: null\n    mode: '0666'\n    bufferSize: 64 * 1024\n    autoClose: true\n\nlazyStream = new lazy(file);\n\nlazyStream.on 'end', ->\n    console.log(\"#{parser.name} - Games: #{parser.games.length}    Started: #{parser.games.where({started: true}).length}\")\n\n    fs.mkdirSync('tmp') unless fs.existsSync('tmp')\n\n    fs.writeFile 'tmp/'+path.basename(filename, path.extname(filename))+'_parsed.json', JSON.stringify(parser.games.toJSON(), null, '  '), (err)->\n        throw err if err\n        console.log('Parsed file saved in \"'+'tmp/'+path.basename(filename, path.extname(filename))+'_parsed.json'+'\"');\n\nlazyStream.lines\n.forEach (line)->\n    lineString = line.toString()\n\n    parser.processLine(lineString)\n\n    return true\n\n    \n"]],"start1":0,"start2":0,"length1":0,"length2":1166}]],"length":1166}
